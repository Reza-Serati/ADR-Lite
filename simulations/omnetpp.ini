[General]
network = flora.simulations.LoRaNetworkTest
result-dir = results
**.maxTransmissionDuration = 4s
**.vector-recording = false
#rng-class = "cMersenneTwister"
rng-class = "cLCG32"

**.loRaGW[*].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0250.00m

**.networkServer.numApps = 1
**.networkServer.app[0].typename = "NetworkServerApp"
**.networkServer.app[0].destAddresses = "loRaGW[0]"
**.networkServer.app[0].destPort = 2000
**.networkServer.app[0].localPort = 1000
**.numberOfPacketsToSend = 0

simtime-resolution = -11
#seed-0-lcg32 = ${1,2,3,4,5,6,7,8}
#seed-0-lcg32 = ${5,6,7,8}
seed-0-lcg32 = 1

#**.networkServer.app[0].adrMethod = ${ADR= "ADR-Lite"}

**.networkServer.**.evaluateADRinServer = true
**.loRaNodes[*].**.evaluateADRinNode = true

**.numberOfNodes = ${Nodes=100..100 step 100}
**.loRaNodes[*].**myADR = ${ADR}
**.loRaNodes[*].LoRaNic.mac.**myADR = ${ADR}



###**.sigma = ${sigma=0, 0.89, 1.78, 2.67, 3.56, 4.46, 5.35, 6.24, 7.08}
**.sigma = ${sigma=7.08}
#**.networkSizeX = ${nSize=9800}
#**.networkSizeY = ${nSize}
**.LoRaMedium.pathLoss.typename = "LoRaPathLossOulu"

###**.sigma = ${sigma=0, 0.89, 1.78, 2.67, 3.56}
#**.sigma = ${sigma=3.56}
#**.networkSizeX = ${nSize=480}
**.networkSizeY = ${nSize}
#**.LoRaMedium.pathLoss.typename = "LoRaLogNormalShadowing"

**.networkSizeX = ${nSize=500,1000,1500,2000,2500,3000}

#**.loRaNodes[*].**isMobile = false
#**.loRaNodes[*].**speed = ${spd=uniform(0mps,0mps)}
**.loRaNodes[*].**isMobile = true
#**.loRaNodes[*].**speed = ${spd=uniform(0mps,5mps)}
**.loRaNodes[*].**speed = ${spd=uniform(0mps,2mps), uniform(2mps,4mps), uniform(4mps,6mps), \
uniform(6mps,8mps), uniform(8mps,10mps), uniform(10mps,12mps)}

**.loRaNodes[*].**sending_interval = ${intv=1000s}
#**.loRaNodes[*].**sending_interval = ${intv=450s, 900s, 1350s, 2700s, 5400s, 10800s, 21600s, 43200s, 86400s}
**.timeToFirstPacket = exponential(1000s)
**.timeToNextPacket = exponential(${intv})
#**.timeToFirstPacket = 1000s
#**.timeToNextPacket = ${intv}

#####################################################
sim-time-limit = ${days=12d}
#sim-time-limit = ${days=12d,24d,36d,48d,60d,72d,84d,96d,108d,120d}

**.loRaNodes[*].**.rpt_num = ${rpt=1}
#**.loRaNodes[*].**.rpt_num = ${rpt=120}
#[Config Urban]	
#[Config Suburban]

**.loRaNodes[*].**.initialX =uniform(0m, ${nSize}m)
**.loRaNodes[*].**.initialY = uniform(0m, ${nSize}m)


**.loRaNodes[*].**initialLoRaSF = intuniform(7,12)
**.loRaNodes[*].**initialLoRaTP = (2dBm) #+ 3dbm*intuniform(0,4))
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 4
**.loRaNodes[*].**.initFromDisplayString = false

#gateway features
**.numberOfGateways = 1
**.loRaGW[0].**.initialX = ${nSize}m / 2
**.loRaGW[0].**.initialY = ${nSize}m / 2 


**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumer.typename = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

#general features
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m
**.constraintAreaMaxX = ${nSize}m
**.constraintAreaMaxY = ${nSize}m


LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.ipv4Delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.minInterferenceTime = 0s
**.displayAddresses = false

